group 'com.hart'
version '1.0-SNAPSHOT'

apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {

    // REST ASSURED
    compile 'io.rest-assured:rest-assured:3.0.1'
    compile 'io.rest-assured:json-path:3.0.1'
    compile 'io.rest-assured:xml-path:3.0.1'

    // UNIREST
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'

    // SERENITY BDD
    compile group: 'net.serenity-bdd', name: 'serenity-gradle-plugin', version: '1.1.41'

    /** ASSERTIONS **/
    // ASSERTJ
    testCompile 'org.assertj:assertj-core:3.5.2'

    /** TEST FRAMEWORK **/
    // TESTNG
    compile group: 'org.testng', name: 'testng', version: '6.9.13.6'

    // JUNIT
    testCompile group: 'junit', name: 'junit', version: '4.12'

    /** JSON **/
    // GSON
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'

}

test {
    systemProperty "CLARITY_USER_EMAIL", System.getProperty('CLARITY_USER_EMAIL')
    systemProperty "CLARITY_USER_PASSWORD", System.getProperty('CLARITY_USER_PASSWORD')

    testLogging {
       // add output for all test statuses (but not "started")
       events "passed", "skipped", "failed", "standardOut", "standardError"

       // print stdout, stderr to console
       testLogging.showStandardStreams = true

       // output exceptions including assertion failure reasons
       showExceptions = true
       showCauses = true
       showStackTraces = false
       exceptionFormat = 'full'
    }

    afterTest { desc, result ->
        println "TEST ${desc.name} [${desc.className}] result: ${result.resultType}"
    }
}
